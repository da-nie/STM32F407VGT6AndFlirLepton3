#ifndef I_DISPLAY_H
#define I_DISPLAY_H

//****************************************************************************************************
//»нтерфейс диспле€
//****************************************************************************************************

//****************************************************************************************************
//подключаемые библиотеки
//****************************************************************************************************
#include <stdbool.h>
#include <stdint.h>

//****************************************************************************************************
//макроопределени€
//****************************************************************************************************

//****************************************************************************************************
//константы
//****************************************************************************************************

//****************************************************************************************************
//предварительные объ€влени€
//****************************************************************************************************

//****************************************************************************************************
//»нтерфейс диспле€
//****************************************************************************************************
class IDisplay
{
 public:
  //-перечислени€---------------------------------------------------------------------------------------
  //предопределенные цвета 
  enum COLOR
	{
   COLOR_BLACK=0x0000,
   COLOR_RED=0xF800,
   COLOR_ORANGE=0xFBE0,
   COLOR_YELLOW=0xFFE0,
   COLOR_GREEN=0x07E0,
   COLOR_CYAN=0x07FF,
   COLOR_BLUE=0x001F,
   COLOR_MAGENTA=0xF81F,
   COLOR_VIOLET=0x881F,
   COLOR_WHITE=0xFFFF
	};
  //-структуры------------------------------------------------------------------------------------------
  //-константы------------------------------------------------------------------------------------------
	static const int32_t DISPLAY_WIDTH=240;//ширина экрана
	static const int32_t DISPLAY_HEIGHT=320;//высота экрана
 private:
  //-переменные-----------------------------------------------------------------------------------------
 public:
  //-деструктор-----------------------------------------------------------------------------------------
  virtual ~IDisplay() {};
 public:
  //-открытые функции-----------------------------------------------------------------------------------
  virtual void InitGPIO(void)=0;//инициализаци€ контактов диспле€
  virtual void Init(void)=0;//инициализаци€ LCD-экрана
  virtual void SetWindow(uint16_t x_left,uint16_t y_top,uint16_t x_right,uint16_t y_bottom)=0;//задать окно вывода пикселей
  virtual void OutColor(uint16_t color)=0;//передать цвет точки
  virtual void PutPixel(uint16_t x,uint16_t y,uint16_t color)=0;//вывести один пиксель
  virtual void PutSymbol(int32_t x,int32_t y,char symbol,uint16_t color)=0;//вывод символа в позицию
  virtual void PutString(int32_t x,int32_t y,const char *string,uint16_t color)=0;//вывод строчки в позицию
  virtual void Print(const char *string,uint16_t color)=0;//вывести текст в текущую позицию
  virtual void Clear(uint16_t color)=0;//сбросить текущую позицию и очистить дисплей 
  //-открытые статические функции-----------------------------------------------------------------------
};

#endif

